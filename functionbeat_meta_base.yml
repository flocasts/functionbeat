cloud:
  auth: "${CLOUD_AUTH}"
  id: "${CLOUD_ID}"

keystore:
  path: './beats.keystore'

logging:
  json: true
  level: warning
  to_files: false
  to_stderr: true

setup:
  kibana:
    host: 4f95dc93e90e41f881de33d25141f8ac.us-west-2.aws.found.io:9243
    username: "${KIBANA_USER}"
    password: "${KIBANA_PASS}"
    protocol: https
  template:
    enabled: true
    overwrite: true
    name: "IDX_NAME-%{[agent.version]}"
    pattern: "IDX_NAME-%{[agent.version]}-*"
    settings.index.number_of_shards: 3
  ilm:
    enabled: auto
    policy_name: "IDX_NAME-%{[agent.version]}"
    rollover_alias: IDX_NAME

output:
  elasticsearch:
    bulk_max_size: 50
    enabled: true
    index: "IDX_NAME-%{[agent.version]}-%{+yyyy.MM.dd}"
    max_retries: 2
    backoff_init: 2 # exponential backoff up to max
    backoff_max: 60
    timeout: 60

path.logs: /tmp/logs

processors:
- drop_fields:
    fields:
      - agent.ephemeral_id
      - agent.hostname
      - agent.id
      - agent.type
      - agent.version
      - ecs.version
      - host.name
      - id
      - log_stream
      - owner
      - subscription_filters
      - message_type

- dissect:
    field: log_group
    target_prefix: dissect_log
    tokenizer: "/aws/lambda/%{function}"

- rename:
    fields:
    - from: "dissect_log.function"
      to: function

- drop_fields:
    fields:
      - dissect_log
      - log_group

queue:
  mem:
    events: 512
    flush:
      min_events: 256
      timeout: 5s

functionbeat:
  provider:
    aws:
      deploy_bucket: flosports-functionbeat-deploy
      functions:
      - type: cloudwatch_logs
        concurrency: 5
        description: lambda function for cloudwatch logs
        enabled: true
        memory_size: 1024MiB
        name: VAR_NAME
        triggers:
